<nav class="fixed top-0 left-0 w-full bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900 text-white shadow-xl z-50 backdrop-blur-sm">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16 items-center">

      <!-- Logo / Brand -->
      <div class="flex-shrink-0">
        <a href="#top" class="flex items-center space-x-2 hover:text-blue-400 transition-all duration-300">
          <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M8 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"/>
              <path d="M3 4a1 1 0 00-1 1v10a1 1 0 001 1h1.05a2.5 2.5 0 014.9 0H14a1 1 0 001-1V5a1 1 0 00-1-1H3zM14 7a1 1 0 110-2 1 1 0 010 2z"/>
            </svg>
          </div>
          <span class="text-xl font-bold bg-gradient-to-r from-blue-400 to-indigo-400 bg-clip-text text-transparent">
            CarCare-Taker
          </span>
        </a>
      </div>

      <!-- Desktop Menu -->
      <div class="hidden md:flex items-center space-x-1">
        <% if (!isLoggedIn) { %>
          <!-- Guest Navigation -->
          <a href="/login" class="nav-item <%= activePage==='login' ? 'active' : '' %>">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"/>
            </svg>
            Login
          </a>
          <a href="/aboutme" class="nav-item <%= activePage==='Aboutme' ? 'active' : '' %>">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
            </svg>
            About
          </a>
          <a href="/myproject" class="nav-item <%= activePage==='myproject' ? 'active' : '' %>">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
            </svg>
            Project
          </a>
        <% } else { %>
          <!-- Authenticated Navigation -->
          <a href="/main/dashboard" class="nav-item <%= activePage==='dashboard' ? 'active' : '' %>">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
            </svg>
            Dashboard
          </a>

          <!-- Car Management Dropdown -->
          <div class="relative dropdown-container">
            <button class="nav-item dropdown-trigger <%= ['add', 'main'].includes(activePage) ? 'active' : '' %>">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
              </svg>
              Cars
              <svg class="w-3 h-3 ml-1 dropdown-arrow transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
              </svg>
            </button>
            <div class="dropdown-menu">
              <a href="/add" class="dropdown-item <%= activePage==='add' ? 'active' : '' %>">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                </svg>
                Add Car
              </a>
              <a href="/main" class="dropdown-item <%= activePage==='main' ? 'active' : '' %>">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"/>
                </svg>
                View All Cars
              </a>
            </div>
          </div>

          <!-- Profile & Settings Dropdown -->
          <div class="relative dropdown-container">
            <button class="nav-item dropdown-trigger <%= ['profile', 'reminders'].includes(activePage) ? 'active' : '' %>">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
              Account
              <svg class="w-3 h-3 ml-1 dropdown-arrow transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
              </svg>
            </button>
            <div class="dropdown-menu">
              <a href="/profile" class="dropdown-item <%= activePage==='profile' ? 'active' : '' %>">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                My Profile
              </a>
              <a href="/reminders" class="dropdown-item <%= activePage==='reminders' ? 'active' : '' %>">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                </svg>
                Email Reminders
                <span class="ml-auto bg-blue-500 text-white text-xs px-2 py-0.5 rounded-full">New</span>
              </a>
            </div>
          </div>

          <!-- More Options Dropdown -->
          <div class="relative dropdown-container">
            <button class="nav-item dropdown-trigger <%= ['Aboutme', 'myproject'].includes(activePage) ? 'active' : '' %>">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"/>
              </svg>
              More
              <svg class="w-3 h-3 ml-1 dropdown-arrow transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
              </svg>
            </button>
            <div class="dropdown-menu">
              <a href="/aboutme" class="dropdown-item <%= activePage==='Aboutme' ? 'active' : '' %>">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
                About Developer
              </a>
              <a href="/myproject" class="dropdown-item <%= activePage==='myproject' ? 'active' : '' %>">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
                </svg>
                Project Info
              </a>
            </div>
          </div>

          <!-- Logout -->
          <button onclick="if(confirm('Do you want to log out?')) { window.location.href='/logout'; }" 
                  class="nav-item logout">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
            </svg>
            Logout
          </button>
        <% } %>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden flex items-center">
        <button id="mobile-menu-button" class="p-2 rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-gray-900 border-t border-gray-700">
    <div class="px-2 pt-2 pb-3 space-y-1">
      <% if (!isLoggedIn) { %>
        <a href="/login" class="mobile-nav-item <%= activePage==='login' ? 'active' : '' %>">Login</a>
        <a href="/aboutme" class="mobile-nav-item <%= activePage==='Aboutme' ? 'active' : '' %>">About</a>
        <a href="/myproject" class="mobile-nav-item <%= activePage==='myproject' ? 'active' : '' %>">Project</a>
      <% } else { %>
        <a href="/main/dashboard" class="mobile-nav-item <%= activePage==='dashboard' ? 'active' : '' %>">Dashboard</a>
        
        <!-- Car Management Section -->
        <div class="border-t border-gray-700 pt-2 mt-2">
          <div class="text-gray-400 text-xs uppercase tracking-wide px-3 py-2">Car Management</div>
          <a href="/add" class="mobile-nav-item <%= activePage==='add' ? 'active' : '' %>">Add Car</a>
          <a href="/main" class="mobile-nav-item <%= activePage==='main' ? 'active' : '' %>">View All Cars</a>
        </div>

        <!-- Account Section -->
        <div class="border-t border-gray-700 pt-2 mt-2">
          <div class="text-gray-400 text-xs uppercase tracking-wide px-3 py-2">Account</div>
          <a href="/profile" class="mobile-nav-item <%= activePage==='profile' ? 'active' : '' %>">My Profile</a>
          <a href="/reminders" class="mobile-nav-item <%= activePage==='reminders' ? 'active' : '' %>">Email Reminders</a>
        </div>

        <!-- More Options Section -->
        <div class="border-t border-gray-700 pt-2 mt-2">
          <div class="text-gray-400 text-xs uppercase tracking-wide px-3 py-2">More</div>
          <a href="/aboutme" class="mobile-nav-item <%= activePage==='Aboutme' ? 'active' : '' %>">About Developer</a>
          <a href="/myproject" class="mobile-nav-item <%= activePage==='myproject' ? 'active' : '' %>">Project Info</a>
        </div>

        <!-- Logout -->
        <div class="border-t border-gray-700 pt-2 mt-2">
          <button onclick="if(confirm('Do you want to log out?')) { window.location.href='/logout'; }" 
                  class="mobile-nav-item text-red-400 hover:text-red-300 hover:bg-red-900/20 w-full text-left">
            Logout
          </button>
        </div>
      <% } %>
    </div>
  </div>
</nav>
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Mobile menu toggle
  const mobileBtn = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (mobileBtn && mobileMenu) {
    mobileBtn.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      
      // Animate hamburger icon
      const icon = mobileBtn.querySelector('svg');
      if (mobileMenu.classList.contains('hidden')) {
        icon.style.transform = 'rotate(0deg)';
      } else {
        icon.style.transform = 'rotate(90deg)';
      }
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', function(e) {
      if (!mobileBtn.contains(e.target) && !mobileMenu.contains(e.target)) {
        mobileMenu.classList.add('hidden');
        const icon = mobileBtn.querySelector('svg');
        icon.style.transform = 'rotate(0deg)';
      }
    });

    // Close mobile menu when clicking on a link
    const mobileLinks = mobileMenu.querySelectorAll('a');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
        const icon = mobileBtn.querySelector('svg');
        icon.style.transform = 'rotate(0deg)';
      });
    });
  }

  // Desktop dropdown functionality
  const dropdownContainers = document.querySelectorAll('.dropdown-container');
  
  dropdownContainers.forEach(container => {
    const trigger = container.querySelector('.dropdown-trigger');
    const menu = container.querySelector('.dropdown-menu');
    const arrow = container.querySelector('.dropdown-arrow');
    
    if (trigger && menu) {
      let timeoutId;
      
      // Show dropdown on hover
      container.addEventListener('mouseenter', () => {
        clearTimeout(timeoutId);
        menu.classList.remove('opacity-0', 'invisible', 'scale-95');
        menu.classList.add('opacity-100', 'visible', 'scale-100');
        if (arrow) arrow.classList.add('rotate-180');
      });
      
      // Hide dropdown on leave with delay
      container.addEventListener('mouseleave', () => {
        timeoutId = setTimeout(() => {
          menu.classList.remove('opacity-100', 'visible', 'scale-100');
          menu.classList.add('opacity-0', 'invisible', 'scale-95');
          if (arrow) arrow.classList.remove('rotate-180');
        }, 150);
      });

      // Click functionality for mobile/touch devices
      trigger.addEventListener('click', (e) => {
        e.preventDefault();
        const isVisible = menu.classList.contains('opacity-100');
        
        // Close all other dropdowns
        dropdownContainers.forEach(otherContainer => {
          if (otherContainer !== container) {
            const otherMenu = otherContainer.querySelector('.dropdown-menu');
            const otherArrow = otherContainer.querySelector('.dropdown-arrow');
            if (otherMenu) {
              otherMenu.classList.remove('opacity-100', 'visible', 'scale-100');
              otherMenu.classList.add('opacity-0', 'invisible', 'scale-95');
            }
            if (otherArrow) otherArrow.classList.remove('rotate-180');
          }
        });
        
        // Toggle current dropdown
        if (isVisible) {
          menu.classList.remove('opacity-100', 'visible', 'scale-100');
          menu.classList.add('opacity-0', 'invisible', 'scale-95');
          if (arrow) arrow.classList.remove('rotate-180');
        } else {
          menu.classList.remove('opacity-0', 'invisible', 'scale-95');
          menu.classList.add('opacity-100', 'visible', 'scale-100');
          if (arrow) arrow.classList.add('rotate-180');
        }
      });
    }
  });

  // Close dropdowns when clicking outside
  document.addEventListener('click', (e) => {
    if (!e.target.closest('.dropdown-container')) {
      dropdownContainers.forEach(container => {
        const menu = container.querySelector('.dropdown-menu');
        const arrow = container.querySelector('.dropdown-arrow');
        if (menu) {
          menu.classList.remove('opacity-100', 'visible', 'scale-100');
          menu.classList.add('opacity-0', 'invisible', 'scale-95');
        }
        if (arrow) arrow.classList.remove('rotate-180');
      });
    }
  });

  // Smooth scrolling for anchor links
  const anchorLinks = document.querySelectorAll('a[href^="#"]');
  
  anchorLinks.forEach(link => {
    link.addEventListener('click', function(e) {
      const href = this.getAttribute('href');
      if (href === '#') return; // Skip empty anchors
      
      e.preventDefault();
      const targetId = href.substring(1);
      
      // Handle special cases
      if (targetId === 'top') {
        window.scrollTo({ top: 0, behavior: 'smooth' });
        return;
      }
      
      const targetElement = document.getElementById(targetId);
      if (targetElement) {
        targetElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });

  // Add active state highlighting based on current page
  const currentPath = window.location.pathname;
  const navItems = document.querySelectorAll('.nav-item, .mobile-nav-item');
  
  navItems.forEach(item => {
    const href = item.getAttribute('href');
    if (href && href !== '#' && currentPath.includes(href)) {
      item.classList.add('active');
    }
  });

  // Add scroll effect to navigation - Always keep nav fixed
  const nav = document.querySelector('nav');
  
  window.addEventListener('scroll', () => {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    
    // Always keep nav visible - removed auto-hide behavior
    nav.style.transform = 'translateY(0)';
    
    // Add backdrop blur effect when scrolled
    if (scrollTop > 50) {
      nav.classList.add('backdrop-blur-lg');
      nav.style.backgroundColor = 'rgba(17, 24, 39, 0.95)';
    } else {
      nav.classList.remove('backdrop-blur-lg');
      nav.style.backgroundColor = '';
    }
  });
});
</script>
