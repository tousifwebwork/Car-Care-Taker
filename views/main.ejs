<%- include('partials/header') %>
<%- include('partials/nav',{ activePage: activePage, isLoggedIn: isLoggedIn }) %>

<div class="min-h-screen bg-gradient-to-br from-indigo-100 via-white to-indigo-50 flex flex-col items-center px-4 py-6 sm:px-6 lg:px-8 pt-20">

    <!-- Dashboard Header Section -->
    <section id="dashboard-header" class="w-full text-center mb-12">
        <div class="bg-white shadow-2xl rounded-3xl p-8 mx-auto max-w-4xl mb-8">
            <h1 class="text-3xl sm:text-4xl font-bold text-gray-800 mb-6">Car Collection Dashboard</h1>
            <p class="text-gray-600 text-lg mb-8">Manage and monitor your vehicle collection</p>
            
            <!-- Add New Car Button -->
            <a href="/add"
               class="bg-indigo-600 text-white px-8 py-3 rounded-lg shadow-lg hover:bg-indigo-700 transition-all duration-300 transform hover:scale-105 font-medium inline-flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                </svg>
                Add New Car
            </a>
        </div>
    </section>

    <!-- Cars Grid Section -->
    <section id="cars-grid" class="w-full max-w-7xl">
        <div class="grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">

        <% if (!cars || cars.length === 0) { %>
            <div class="col-span-full">
                <div class="bg-white shadow-2xl rounded-3xl p-12 text-center">
                    <div class="w-24 h-24 bg-indigo-100 rounded-full flex items-center justify-center mx-auto mb-6">
                        <svg class="w-12 h-12 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                        </svg>
                    </div>
                    <h3 class="text-2xl font-bold text-gray-800 mb-4">No Cars Added Yet</h3>
                    <p class="text-gray-600 mb-8">Start building your collection by adding your first vehicle.</p>
                    <a href="/add" class="bg-indigo-600 text-white px-8 py-3 rounded-lg font-medium hover:bg-indigo-700 transition-all duration-300 transform hover:scale-105 shadow-lg">
                        Add Your First Car
                    </a>
                </div>
            </div>
        <% } else { %>
            <% cars.forEach(car => { %>
                <div class="bg-white shadow-xl rounded-2xl p-6 hover:shadow-2xl transition-all duration-300 transform hover:scale-105 border border-gray-200">

                    <!-- Action Buttons -->
                    <div class="flex justify-between items-center mb-4">
                        <a href="/detail/<%= car._id %>"
                            class="text-indigo-600 hover:text-indigo-800 font-medium text-sm px-3 py-1 bg-indigo-50 rounded-lg border border-indigo-200 hover:bg-indigo-100 transition-all">
                            View Details
                        </a>
                        <button
                            class="text-red-600 hover:text-red-800 font-medium text-sm px-3 py-1 bg-red-50 rounded-lg border border-red-200 hover:bg-red-100 transition-all"
                            onclick="(async () => {
                                   if (confirm('Do You Want to Delete [<%= car.Username %>]')) {
                                try {
                                    const res = await fetch('/main/delete/<%= car._id %>', { method: 'DELETE' });
                                    if (res.ok) {
                                        this.closest('.bg-white').remove();
                                    } else {
                                        alert('Failed to delete car');
                                    }
                                } 
                                catch(err) {
                                    console.error(err);
                                }}
                            })()">
                            Delete
                        </button>
                    </div>
                    <!-- Car Content -->
                    <div>
                        <h2 class="text-2xl font-bold text-gray-800 mb-4">
                            <%= car.Username %>
                        </h2>
                        
                        <div class="space-y-3">
                            <div class="flex justify-between border-b border-gray-100 pb-2">
                                <span class="text-gray-600 font-medium">Engine No:</span>
                                <span class="text-gray-800 font-semibold"><%= car.car_no %></span>
                            </div>
                            
                            <div class="flex justify-between border-b border-gray-100 pb-2">
                                <span class="text-gray-600 font-medium">Last PUC:</span>
                                <span class="text-gray-800"><%= car.lastPUC ? car.lastPUC.toISOString().split('T')[0] : 'N/A' %></span>
                            </div>
                            
                            <div class="flex justify-between border-b border-gray-100 pb-2">
                                <span class="text-gray-600 font-medium">Next PUC:</span>
                                <span class="text-gray-800"><%= car.nextPUC ? car.nextPUC.toISOString().split('T')[0] : 'N/A' %></span>
                            </div>
                            
                            <div class="flex justify-between border-b border-gray-100 pb-2">
                                <span class="text-gray-600 font-medium">Last Insurance:</span>
                                <span class="text-gray-800"><%= car.lastInsurance ? car.lastInsurance.toISOString().split('T')[0] : 'N/A' %></span>
                            </div>
                            
                            <div class="flex justify-between border-b border-gray-100 pb-2">
                                <span class="text-gray-600 font-medium">Next Insurance:</span>
                                <span class="text-gray-800"><%= car.nextInsurance ? car.nextInsurance.toISOString().split('T')[0] : 'N/A' %></span>
                            </div>

                            <% if (car.nextInsurance) { 
                                const today=new Date(); 
                                const diffTime=new Date(car.nextInsurance) - today; 
                                const diffDays=Math.ceil(diffTime / (1000 * 60 * 60 * 24)); 
                            %>
                                <div class="mt-4 p-4 rounded-lg <%= diffDays <= 30 ? 'bg-red-50 border-red-200' : 'bg-green-50 border-green-200' %> border">
                                    <div class="text-center">
                                        <span class="text-sm text-gray-600 font-medium">Insurance Status:</span>
                                        <div class="text-lg font-bold <%= diffDays <= 30 ? 'text-red-600' : 'text-green-600' %>">
                                            <%= diffDays >= 0 ? `${diffDays} days remaining` : "Expired" %>
                                        </div>
                                    </div>
                                </div>
                            <% } else { %>
                                <div class="mt-4 p-4 rounded-lg bg-gray-50 border border-gray-200">
                                    <div class="text-center">
                                        <span class="text-sm text-gray-600 font-medium">Insurance Status:</span>
                                        <div class="text-lg font-bold text-gray-500">Not Available</div>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                    </div>

                </div>
            <% }); %>
        <% } %>
        </div>
    </section>
</div>

<!-- Enhanced Smooth Scrolling and Animation JavaScript -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add smooth scrolling behavior to all navigation links
        const navLinks = document.querySelectorAll('nav a[href^="#"]');
        
        navLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const targetId = this.getAttribute('href').substring(1);
                const targetElement = document.getElementById(targetId);
                
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Create and style scroll-to-top button
        let scrollToTopBtn = document.createElement('button');
        scrollToTopBtn.innerHTML = 'â†‘';
        scrollToTopBtn.className = 'scroll-to-top';
        scrollToTopBtn.setAttribute('aria-label', 'Scroll to top');
        scrollToTopBtn.onclick = () => {
            window.scrollTo({ 
                top: 0, 
                behavior: 'smooth' 
            });
        };
        document.body.appendChild(scrollToTopBtn);

        // Show/hide scroll to top button based on scroll position
        function toggleScrollButton() {
            if (window.pageYOffset > 200) {
                scrollToTopBtn.classList.add('visible');
            } else {
                scrollToTopBtn.classList.remove('visible');
            }
        }

        // Throttled scroll listener for better performance
        let scrollTimeout;
        window.addEventListener('scroll', function() {
            if (scrollTimeout) {
                clearTimeout(scrollTimeout);
            }
            scrollTimeout = setTimeout(() => {
                toggleScrollButton();
            }, 10);
        });
        
        // Initial check
        toggleScrollButton();

        // Add smooth scrolling to all anchor links on the page
        const allAnchorLinks = document.querySelectorAll('a[href^="#"]');
        allAnchorLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                const href = this.getAttribute('href');
                if (href === '#' || href === '#top') {
                    e.preventDefault();
                    window.scrollTo({ 
                        top: 0, 
                        behavior: 'smooth' 
                    });
                    return;
                }
                
                const targetId = href.substring(1);
                const targetElement = document.getElementById(targetId);
                if (targetElement) {
                    e.preventDefault();
                    targetElement.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Add intersection observer for scroll-triggered animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -10% 0px'
        };

        const elementObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animate-fadeInUp');
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Add animation classes to car cards and sections
        const carCards = document.querySelectorAll('.bg-white.shadow-xl');
        const dashboardSections = document.querySelectorAll('#dashboard-header, #cars-grid');
        
        [...carCards, ...dashboardSections].forEach((element, index) => {
            element.style.opacity = '0';
            element.style.transform = 'translateY(30px)';
            element.style.transition = 'all 0.6s ease-out';
            element.style.transitionDelay = `${index * 0.1}s`;
            elementObserver.observe(element);
        });

        // Smooth scroll on page load
        window.scrollTo({ top: 0, behavior: 'smooth' });
    });
</script>

<%- include('partials/footer') %>
